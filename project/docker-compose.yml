version: '3'
services:

  #UsersDB
  usersdb:
    image: mysql:latest
    container_name: UserMicroService
    env_file:
      - ./ums.env
#    ports:
#      - "3307:3306"
    volumes:
      - ./databases/umsDB:/var/lib/mysql
    restart: unless-stopped

  #TasksDB
  tasksdb:
    image: mysql:latest
    container_name: TaskMicroService
    env_file:
      - ./tms.env
#    ports:
#      - "3308:3306"
    volumes:
      - ./databases/tmsDB:/var/lib/mysql
    restart: unless-stopped


  #Eureka
  eureka:
    build: ./EurekaServer
#    ports:
#      - "8761:8761"
    restart: unless-stopped

  #ApiGateWay
  gateway:
    build: ./ApiGateWay
#    ports:
#      - "8762:8762"
    depends_on:
      - eureka
    restart: unless-stopped

  #UserService
  ums:
    build: ./UserMicroService
  #  ports:
  #    - "8080:8080"
    depends_on:
      - eureka
      - gateway
      - usersdb
    restart: unless-stopped

  #TaskService
  tms:
    build: ./TaskMicroService
#    ports:
#      - "8081:8081"
    depends_on:
      - eureka
      - gateway
      - tasksdb
    restart: unless-stopped

  #TaskClient
  taskclient:
    build: ./TaskClient
    ports:
      - "8083:8083"
    depends_on:
      - eureka
      - gateway
      - tms
      - ums
    restart: unless-stopped

  #Prometheus
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - taskclient
    restart: unless-stopped

  #Grafana√ü
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
